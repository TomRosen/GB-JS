var memory=new Uint8Array(65536),register=new Uint8Array(8),RAMEnabled=!1,bootCode="31 FE FF AF 21 FF 9F 32 CB 7C 20 FB 21 26 FF 0E 11 3E 80 32 E2 0C 3E F3 E2 32 3E 77 77 3E FC E0 47 11 A8 00 21 10 80 1A CD 95 00 CD 96 00 13 7B FE 34 20 F3 11 D8 00 06 08 1A 13 22 23 05 20 F9 3E 19 EA 10 99 21 2F 99 0E 0C 3D 28 08 32 0D 20 F9 2E 0F 18 F3 67 3E 64 57 E0 42 3E 91 E0 40 04 1E 02 0E 0C F0 44 FE 90 20 FA 0D 20 F7 1D 20 F2 0E 13 24 7C 1E 83 FE 62 28 06 1E C1 FE 64 20 06 7B E2 0C 3E 87 E2 F0 42 90 E0 42 15 20 D2 05 20 4F 16 20 18 CB 4F 06 04 C5 CB 11 17 C1 CB 11 17 05 20 F5 22 23 22 23 C9 00 00 00 0D 00 09 11 09 89 39 08 C9 00 0B 00 03 00 0C CC CC 00 0F 00 00 00 00 EC CC EC CC DD DD 99 99 98 89 EE FB 67 63 6E 0E CC DD 1F 9F 88 88 00 00 00 00 00 00 00 00 21 A8 00 11 A8 00 1A 13 BE 20 FE 23 7D FE 34 20 F5 06 19 78 86 23 05 20 FB 86 20 FE 3E 01 E0 50".split(" ").map(a=>parseInt(a,16));const A=1,F=2,B=4,C=8,D=16,E=32,H=64,L=128;var SP=65534,PC=256,imm=921,spimm=913,flags={Z:!1,N:!1,H:!1,C:!1,flagByte:function(){var a=0;return!0==Z&&(a+=8),!0==N&&(a+=4),a<<4}},SpecialFlags={P1:65280,SB:65281,SC:65282,DIV:65284,TIMA:65285,TMA:65286,TAC:65287,IF:65295,NR10:65296,NR11:65297,NR12:65298,NR13:65299,NR14:65300,NR21:65302,NR22:65303,NR23:65304,NR24:65305,NR30:65306,NR31:65307,NR32:65308,NR33:65309,NR34:65310,NR41:65312,NR42:65313,NR43:65314,NR44:65315,NR50:65316,NR51:65317,NR52:65318,LCDC:65344,STAT:65345,SCY:65346,SCX:65347,LY:65348,LYC:65349,DMA:65350,BGP:65351,OBP0:65352,OBP1:65353,WY:65354,WX:65355,IE:65535};function memorybankControll(b,c){let a=memory[327];switch(a){case 0:case 5:case 6:case 8:case 9:case 11:case 12:case 13:case 15:case 16:case 17:case 18:case 19:case 25:case 26:case 27:case 28:case 29:case 30:break;case 1:case 2:case 3:b<=8191&&(RAMEnabled=(15&c)==10);break;default:console.log("Unknown cart type: "+a)}}function write(a,b){if(a<32768){memorybankControll(a,b);return}a>=0&&a<=65535&&(memory[a]=b)}function write16bit(a,b,c){write(a,b),write(a+1,c)}function read(a){return a>=0&&a<=65535?memory[a]:0}function dec2bin(a){return(a>>>0).toString(2)}function signed(a){if(a>127)return a-256}function nop(){return()=>(PC+=1,4)}function ld(a,b){return()=>(register[a]=register[b],PC+=1,4)}function ld_imm(a){return()=>(register[a]=read(PC+1),PC+=2,8)}function ld_from_mem(a,b,c){return()=>(register[a]=read((register[b]<<8)+register[c]),PC+=1,8)}function ld_from_mem_imm(a){return()=>(register[a]=read((read(PC+2)<<8)+read(PC+1)),PC+=3,16)}function ld_to_mem(a,b,c){return()=>(write((register[b]<<8)+register[a],register[c]),PC+=1,8)}function ld_to_mem_imm(a,b){return()=>b==imm?(write((read(PC+2)<<8)+read(PC+1),register[a]),PC+=3,16):(write((register[b]<<8)+register[a],read(PC+1)),PC+=3,12)}function ldac(a,b){return()=>1==a?(register[a],read(65280+register[b]),PC+=1,8):(write(65280+register[a],register[b]),PC+=1,8)}function ldd(a,b){return()=>a==HL?(write(register[128]+(register[64]<<8),register[b]),0==register[128]?register[64]-=1:register[128]-=1,PC+=1,8):(register[b]=read(register[128]+(register[64]<<8)),0==register[128]?register[64]-=1:register[128]-=1,PC+=1,8)}function ldi(a,b){return()=>321==a?(write(register[128]+(register[64]<<8),register[b]),255==register[128]?register[64]+=1:register[128]+=1,PC+=1,8):(register[b]=read(register[128]+(register[64]<<8)),255==register[128]?register[64]+=1:register[128]+=1,PC+=1,8)}function ldh(a,b){return()=>a==imm?(write(65280+read(PC+1),register[b]),PC+=2,8):(register[a]=read(65280+read(PC+1)),PC+=2,8)}function ld16(a,b,c){return()=>c==imm?(register[a]=read(PC+2),register[b]=read(PC+1),PC+=3,12):c!=spimm?(SP=regsiter[64]<<8+register[128],PC=1,8):a==SP&&b==spimm?(SP=read(PC+1)+(read(PC+2)<<8),PC+=3,12):(write((read(PC+2)<<8)+read(PC+1),255&SP,SP>>>8),PC+=3,20)}function ldhl(){return()=>{var a=signed(read(PC+1)),b=SP+a;return flags.H=(15&SP)+(15&a)>=16,flags.C=(255&SP)+(255&a)>=256,flags.Z=!1,flags.N=!1,PC+=2,12}}function push(a,b){return()=>(write(SP-=1,a),write(SP-=1,b),PC+=1,16)}function pop(a,b){return()=>(register[b]=read(SP),SP+=1,register[a]=read(SP),SP+=1,PC+=1,12)}function add(a){return()=>(register[1]+=register[a],flags.H=(15&register[1])+(15&register[a])>=16,flags.C=register[1]+register[a]<register[1],flags.Z=0==register[1],flags.N=!1,PC+=1,4)}function add_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b]);regsiter[1]+=c,PC+=1}else{var c=read(PC+1);register[1]+=c,PC+=2}return flags.H=(15&register[1])+(15&c)>=16,flags.C=register[1]+c<register[1],flags.Z=0==register[1],flags.N=!1,8}}function adc(a){return()=>{var b=register[a]+flags.C;return register[1]+=b,flags.H=(15&register[1])+(15&b)>=16,flags.C=register[1]+b<register[1],flags.Z=0==register[1],flags.N=!1,PC+=1,4}}function adc_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b])+flags.C;regsiter[1]+=c,PC+=1}else{var c=read(PC+1)+flags.C;register[1]+=c,PC+=2}return flags.H=(15&register[1])+(15&c)>=16,flags.C=register[1]+c<register[1],flags.Z=0==register[1],flags.N=!1,8}}function sub(a){return()=>(register[1]-=register[a],flags.H=(240&register[1])-(240&register[a])<16,flags.C=register[1]-register[a]>register[1],flags.Z=0==register[1],flags.N=!0,PC+=1,4)}function sub_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b]);regsiter[1]-=c,PC+=1}else{var c=read(PC+1);register[1]-=c,PC+=2}return flags.H=(240&register[1])-(240&c)<16,flags.C=register[1]-c>register[1],flags.Z=0==register[1],flags.N=!0,8}}function sbc(a){return()=>{var b=register[a]-flags.C;return register[1]-=b,flags.H=(240&register[1])-(240&b)<16,flags.C=register[1]-b>register[1],flags.Z=0==register[1],flags.N=!0,PC+=1,4}}function sbc_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b])-flags.C;register[1]-=c,PC+=1}else{var c=read(PC+1)-flags.C;register[1]-=c,PC+=2}return flags.H=(240&register[1])-(240&c)<16,flags.C=register[1]-c>register[1],flags.Z=0==register[1],flags.N=!0,8}}function and(a){return()=>(register[1]&=register[a],flags.H=!0,flags.C=!1,flags.Z=0==register[1],flags.N=!1,PC+=1,4)}function and_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b]);regsiter[1]&=c,PC+=1}else{var c=read(PC+1);register[1]=register[1]&c,PC+=2}return flags.H=!0,flags.C=!1,flags.Z=0==register[1],flags.N=!1,8}}function or(a){return()=>(register[1]|=register[a],flags.H=!1,flags.C=!1,flags.Z=0==register[1],flags.N=!1,PC+=1,4)}function or_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b]);regsiter[1]|=c,PC+=1}else{var c=read(PC+1);register[1]=rregister[1]&c,PC+=2}return flags.H=!1,flags.C=!1,flags.Z=0==register[1],flags.N=!1,8}}function xor(a){return()=>(register[1]^=register[a],flags.H=!1,flags.C=!1,flags.Z=0==register[1],flags.N=!1,PC+=1,4)}function xor_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b]);regsiter[1]^=c,PC+=1}else{var c=read(PC+1);register[1]=rregister[1]&c,PC+=2}return flags.H=!1,flags.C=!1,flags.Z=0==register[1],flags.N=!1,8}}function cp(a){return()=>(register[1]-=register[a],flags.H=(240&register[1])-(240&register[a])<16,flags.C=register[1]<register[a],flags.Z=register[1]==register[a],flags.N=!0,PC+=1,4)}function cp_from_mem(a,b){return()=>{if(64==a&&128==b){var c=read((register[a]<<8)+register[b]);regsiter[1]-=c,PC+=1}else{var c=read(PC+1);register[1]-=c,PC+=2}return flags.H=(240&register[1])-(240&c)<16,flags.C=register[1]<c,flags.Z=register[1]==c,flags.N=!0,8}}function inc(a,b){return()=>{if(64!=a||128!=b)return register[a]+=1,flags.H=(15&register[a])+1>=16,flags.Z=0==register[a],flags.N=!1,PC+=1,4;var c=read((register[a]<<8)+register[b]);return c+=1,write((register[a]<<8)+register[b],c),flags.H=(15&c)+1>=16,flags.Z=0==register[a],flags.N=!1,PC+=1,12}}function dec(a,b){return()=>{if(64!=a||128!=b)return register[a]-=1,flags.H=(240&register[a])-1<16,flags.Z=0==register[a],flags.N=!0,PC+=1,4;var c=read((register[a]<<8)+register[b]);return c-=1,write((register[a]<<8)+register[b],c),flags.H=(240&c)-1<16,flags.Z=0==register[a],flags.N=!0,PC+=1,12}}function add16(a,b,c){return()=>{if(c==spimm)return flags.H=(4095&SP)+read(PC+1)>=4096,flags.C=SP<SP+read(PC+1),flags.Z=!1,flags.N=!1,PC+=2,16;if(a==SP){var d=(register[64]<<8)+register[128],e=d+SP;return register[64]=e>>>8,register[128]=e,flags.H=(4095&d)+(4095&SP)>=4096,flags.C=e<d,flags.N=!1,PC+=1,8}var d=(register[64]<<8)+register[128],f=(register[a]<<8)+register[b],e=d+f;return register[64]=e>>>8,register[128]=e,flags.H=(4095&d)+(4095&f)>=4096,flags.C=e<d,flags.N=!1,PC+=1,8}}function inc16(a,b){return()=>{if(a==SP&&null==b)return SP+=1,PC+=1,8;var c=(register[a]<<8)+register[b]+1;return register[a]=c>>>8,register[b]=c,PC+=1,8}}function dec16(a,b){return()=>{if(a==SP&&null==b)return SP-=1,PC+=1,8;var c=(register[a]<<8)+register[b]-1;return register[a]=c>>>8,register[b]=c,PC+=1,8}}function swap(a){return()=>{if(321==a){var b=read((register[64]<<8)+register[128]);return n=b<<4+b>>>4,write((register[64]<<8)+register[128],n),flags.Z=0==n,flags.N=!1,flags.H=!1,flags.C=!1,PC+=1,16}var b=register[a]>>>4;return register[a]=register<<4+b,flags.Z=0==register[a],flags.N=!1,flags.H=!1,flags.C=!1,PC+=1,8}}function daa(){return()=>(flags.N?(flags.C&&(register[1]-=96),flags.H&&(register[1]-=6)):((register[1]>153||flags.C)&&(register[1]+=96,flags.C=!0),((15&register[1])>9||flags.H)&&(register[1]+=6)),flags.Z=0==register[1],flags.H=!1,PC+=1,4)}function cpl(){return()=>(register[1]=255^register[1],flags.N=!0,flags.H=!0,PC+=1,4)}function ccf(){return()=>(flags.N=!1,flags.H=!1,flags.C=!flags.C,PC+=1,4)}function scf(){return()=>(flags.N=!1,flags.H=!1,flags.C=!0,PC+=1,4)}function rl(a,b,c){return()=>{if(!0==b){var d=flags.flagByte()?1:0;flags.C=!!register[a],register[a]=register[a]<<1+d}else register[a]?(register[a]=register[a]<<2,flags.C=!0):(register[a]=register[a]<<1,flags.C=!1);return flags.N=!1,flags.H=!1,flags.Z=0==register[a],PC+=1,!0==c?4:8}}function rl_from_mem(a,b,c){return()=>{var d=read((register[a]<<8)+register[b]);if(!0==c){var d=flags.flagByte()?1:0;flags.C=!!d,d<<=1+d}else d?(d<<=2,flags.C=!0):(d<<=1,flags.C=!1);return flags.N=!1,flags.H=!1,flags.Z=0==d,write((register[a]<<8)+register[b],d),PC+=1,16}}function rr(a,b,c){return()=>{if(!0==b){var d=flags.flagByte()?128:0;flags.C=!!register[a],register[a]=register[a]>>>1+d}else register[a]?(register[a]=register[a]>>>129,flags.C=!0):(register[a]=register[a]>>>1,flags.C=!1);return flags.N=!1,flags.H=!1,flags.Z=0==register[a],PC+=1,!0==c?4:8}}function rr_from_mem(a,b,c){return()=>{var d=read((register[a]<<8)+register[b]);if(!0==c){var e=flags.flagByte()?128:0;flags.C=!!d,d>>>=1+e}else d?(d>>>=129,flags.C=!0):(d>>>=1,flags.C=!1);return flags.N=!1,flags.H=!1,flags.Z=0==d,write((register[a]<<8)+register[b],d),PC+=1,16}}function sl(a){return()=>(flags.C=!!register[a],register[a]=regsiter[a]<<1,flags.N=!1,flags.H=!1,flags.Z=0==register[a],PC+=1,8)}function sl_from_mem(a,b){return()=>{var c=read((register[a]<<8)+register[b]);return flags.C=!!c,c<<=1,flags.N=!1,flags.H=!1,flags.Z=0==c,write((register[a]<<8)+register[b],c),PC+=1,16}}function sr(a,b){return()=>(flags.C=!!n,!0==b?register[a]=register[a]>>>1:register[a]=register[a]>>1,flags.N=!1,flags.H=!1,flags.Z=0==register[a],PC+=1,8)}function sr_from_mem(a,b,c){return()=>{var d=read((register[a]<<8)+register[b]);return flags.C=!!d,!0==c?d>>>=1:d>>=1,flags.N=!1,flags.H=!1,flags.Z=0==d,write((register[a]<<8)+register[b],d),PC+=1,16}}function bit(a,b){return()=>(flags.Z=!register[b]||1<<a!=1<<a,flags.N=!1,flags.H=!0,PC+=1,8)}function bit_from_mem(a,b,c){return()=>{var d=read((register[b]<<8)+register[c]);return flags.Z=!d||1<<a!=1<<a,flags.N=!1,flags.H=!0,PC+=1,16}}function set(a,b){return()=>(register[b]|=1<<a,PC+=1,8)}function set_from_mem(a,b,c){return()=>{let d=read((register[b]<<8)+register[c]);return d|=1<<a,write((register[b]<<8)+register[c],d),PC+=1,16}}function res(a,b){return()=>(register[b]&=~(1<<a),PC+=1,8)}function res_from_mem(a,b,c){return()=>{let d=read((register[b]<<8)+register[c]);return d&=~(1<<a),write((register[b]<<8)+register[c],d),PC+=1,16}}function jump_from_mem_imm(a){return()=>(a||null==a?PC=(read(PC+2)<<8)+read(PC+1):PC+=3,12)}function jump_hl(){return()=>(PC=(register[a]<<8)+register[b],4)}function jump_add_imm(a){return()=>(a||null==a?PC+=read(PC+1):PC+=2,8)}function call(a){return()=>(a||null==a?(writeMem16(SP-=2,PC+3>>8,PC+3&255),PC=(read(PC+2)<<8)+read(PC+1)):PC+=3,12)}function rst(a){return()=>(writeMem16(SP-=2,PC+1>>8,PC+1&255),PC=a,32)}function ret(a){return()=>{if(a||null==a){let b=readMem16(SP);SP+=2,PC=(b[0]<<8)+b[1]}return 8}}function unused(){return 4}var opcodes=new Array(4096);opcodes[0]=nop(),opcodes[1]=ld16(4,8,imm),opcodes[2]=ld_to_mem(4,8,1),opcodes[3]=inc16(4,8),opcodes[4]=inc(4,4),opcodes[5]=dec(4,4),opcodes[6]=ld_imm(4),opcodes[7]=rl(1,!1,!0),opcodes[8]=ld16(SP,SP,spimm),opcodes[9]=add16(4,8,null),opcodes[10]=ld_from_mem(1,4,8),opcodes[11]=dec16(4,8),opcodes[12]=inc(8,8),opcodes[13]=dec(8,8),opcodes[14]=ld_imm(8),opcodes[15]=rr(1,!1,!0),opcodes[16]=0,opcodes[17]=ld16(16,32,imm),opcodes[18]=ld_to_mem(16,32,1),opcodes[19]=inc16(16,32),opcodes[20]=inc(16,16),opcodes[21]=dec(16,16),opcodes[22]=ld_imm(16),opcodes[23]=rl(1,!0,!0),opcodes[24]=jump_add_imm(null),opcodes[25]=add16(16,32,null),opcodes[26]=ld_from_mem(1,16,32),opcodes[27]=dec16(16,32),opcodes[28]=inc(32,32),opcodes[29]=dec(32,32),opcodes[30]=ld_imm(32),opcodes[31]=rr(1,!0,!0),opcodes[32]=jump_add_imm(!flags.Z),opcodes[33]=ld16(64,128,imm),opcodes[34]=ldi(321,1),opcodes[35]=inc16(64,128),opcodes[36]=inc(64,64),opcodes[37]=dec(64,64),opcodes[38]=ld_imm(64),opcodes[39]=daa(),opcodes[40]=jump_add_imm(flags.Z),opcodes[41]=add16(64,128,null),opcodes[42]=ldi(1,321),opcodes[43]=dec16(64,128),opcodes[44]=inc(128,128),opcodes[45]=dec(128,128),opcodes[46]=ld_imm(128),opcodes[47]=cpl(),opcodes[48]=jump_add_imm(!flags.C),opcodes[49]=ld(SP,spimm,spimm),opcodes[50]=ldd(321,1),opcodes[51]=inc16(SP,null),opcodes[52]=inc(64,128),opcodes[53]=dec(64,128),opcodes[54]=ld_to_mem_imm(64,128),opcodes[55]=scf(),opcodes[56]=jump_add_imm(flags.C),opcodes[57]=add16(SP,SP,null),opcodes[58]=ldd(1,321),opcodes[59]=dec16(SP,null),opcodes[60]=inc(1,1),opcodes[61]=dec(1,1),opcodes[62]=ld_imm(1),opcodes[63]=ccf(),opcodes[64]=ld(4,4),opcodes[65]=ld(4,8),opcodes[66]=ld(4,16),opcodes[67]=ld(4,32),opcodes[68]=ld(4,64),opcodes[69]=ld(4,128),opcodes[70]=ld_from_mem(4,64,128),opcodes[71]=ld(4,1),opcodes[72]=ld(8,4),opcodes[73]=ld(8,8),opcodes[74]=ld(8,16),opcodes[75]=ld(8,32),opcodes[76]=ld(8,64),opcodes[77]=ld(8,128),opcodes[78]=ld_from_mem(8,64,128),opcodes[79]=ld(8,1),opcodes[80]=ld(16,4),opcodes[81]=ld(16,8),opcodes[82]=ld(16,16),opcodes[83]=ld(16,32),opcodes[84]=ld(16,64),opcodes[85]=ld(16,128),opcodes[86]=ld_from_mem(16,64,128),opcodes[87]=ld(16,1),opcodes[88]=ld(32,4),opcodes[89]=ld(32,8),opcodes[90]=ld(32,16),opcodes[91]=ld(32,32),opcodes[92]=ld(32,64),opcodes[93]=ld(32,128),opcodes[94]=ld_from_mem(32,64,128),opcodes[95]=ld(32,1),opcodes[96]=ld(64,4),opcodes[97]=ld(64,8),opcodes[98]=ld(64,16),opcodes[99]=ld(64,32),opcodes[100]=ld(64,64),opcodes[101]=ld(64,128),opcodes[102]=ld_from_mem(64,64,128),opcodes[103]=ld(64,1),opcodes[104]=ld(128,4),opcodes[105]=ld(128,8),opcodes[106]=ld(128,16),opcodes[107]=ld(128,32),opcodes[108]=ld(128,64),opcodes[109]=ld(128,128),opcodes[110]=ld_from_mem(128,64,128),opcodes[111]=ld(128,1),opcodes[112]=ld_to_mem(64,128,4),opcodes[113]=ld_to_mem(64,128,8),opcodes[114]=ld_to_mem(64,128,16),opcodes[115]=ld_to_mem(64,128,32),opcodes[116]=ld_to_mem(64,128,64),opcodes[117]=ld_to_mem(64,128,128),opcodes[118]=0,opcodes[119]=ld_to_mem(64,128,1),opcodes[120]=ld(1,4),opcodes[121]=ld(1,8),opcodes[122]=ld(1,16),opcodes[123]=ld(1,32),opcodes[124]=ld(1,64),opcodes[125]=ld(1,128),opcodes[126]=ld_from_mem(1,64,128),opcodes[127]=ld(1,1),opcodes[128]=add(4),opcodes[129]=add(8),opcodes[130]=add(16),opcodes[131]=add(32),opcodes[132]=add(64),opcodes[133]=add(128),opcodes[134]=add_from_mem(64,128),opcodes[135]=add(1),opcodes[136]=adc(4),opcodes[137]=adc(8),opcodes[138]=adc(16),opcodes[139]=adc(32),opcodes[140]=adc(64),opcodes[141]=adc(128),opcodes[142]=adc_from_mem(64,128),opcodes[143]=adc(1),opcodes[144]=sub(4),opcodes[145]=sub(8),opcodes[146]=sub(16),opcodes[147]=sub(32),opcodes[148]=sub(64),opcodes[149]=sub(128),opcodes[150]=sub_from_mem(64,128),opcodes[151]=sub(1),opcodes[152]=sbc(4),opcodes[153]=sbc(8),opcodes[154]=sbc(16),opcodes[155]=sbc(32),opcodes[156]=sbc(64),opcodes[157]=sbc(128),opcodes[158]=sbc_from_mem(64,128),opcodes[159]=sbc(1),opcodes[160]=and(4),opcodes[161]=and(8),opcodes[162]=and(16),opcodes[163]=and(32),opcodes[164]=and(64),opcodes[165]=and(128),opcodes[166]=and_from_mem(64,128),opcodes[167]=and(1),opcodes[168]=xor(4),opcodes[169]=xor(8),opcodes[170]=xor(16),opcodes[171]=xor(32),opcodes[172]=xor(64),opcodes[173]=xor(128),opcodes[174]=xor_from_mem(64,128),opcodes[175]=xor(1),opcodes[176]=or(4),opcodes[177]=or(8),opcodes[178]=or(16),opcodes[179]=or(32),opcodes[180]=or(64),opcodes[181]=or(128),opcodes[182]=or_from_mem(64,128),opcodes[183]=or(1),opcodes[184]=cp(4),opcodes[185]=cp(8),opcodes[186]=cp(16),opcodes[187]=cp(32),opcodes[188]=cp(64),opcodes[189]=cp(128),opcodes[190]=cp_from_mem(64,128),opcodes[191]=cp(1),opcodes[192]=ret(!flags.Z),opcodes[193]=pop(4,8),opcodes[194]=jump_from_mem_imm(!flags.Z),opcodes[195]=jump_from_mem_imm(null),opcodes[196]=call(!flags.Z),opcodes[197]=push(4,8),opcodes[198]=add_from_mem(1,imm),opcodes[199]=rst(0),opcodes[200]=ret(flags.Z),opcodes[201]=ret(null),opcodes[202]=jump_from_mem_imm(flags.Z),opcodes[203]=function(){return CBcodes[readMem(++PC)]()},opcodes[204]=call(flags.Z),opcodes[205]=call(null),opcodes[206]=adc_from_mem(1,imm),opcodes[207]=rst(8),opcodes[208]=ret(!flags.C),opcodes[209]=pop(16,32),opcodes[210]=jump_from_mem_imm(!flags.C),opcodes[211]=unused,opcodes[212]=call(!flags.C),opcodes[213]=push(16,32),opcodes[214]=sub_from_mem(1,imm),opcodes[215]=rst(16),opcodes[216]=ret(flags.C),opcodes[217]=0,opcodes[218]=jump_from_mem_imm(flags.C),opcodes[219]=unused,opcodes[220]=call(flags.C),opcodes[221]=unused,opcodes[222]=sbc_from_mem(1,imm),opcodes[223]=rst(24),opcodes[224]=ldh(imm,1),opcodes[225]=pop(64,128),opcodes[226]=ldac(8,1),opcodes[227]=unused,opcodes[228]=unused,opcodes[229]=push(64,128),opcodes[230]=and_from_mem(1,imm),opcodes[231]=rst(32),opcodes[232]=add16(SP,SP,spimm),opcodes[233]=jump_hl(),opcodes[234]=ld_to_mem_imm(1,imm),opcodes[235]=unused,opcodes[236]=unused,opcodes[237]=unused,opcodes[238]=xor(1,imm),opcodes[239]=rst(40),opcodes[240]=ldh(1,imm),opcodes[241]=pop(1,2),opcodes[242]=ldac(1,8),opcodes[243]=0,opcodes[244]=unused,opcodes[245]=push(1,2),opcodes[246]=or_from_mem(1,imm),opcodes[247]=rst(48),opcodes[248]=ldhl(),opcodes[249]=ld16(null,SP,null),opcodes[250]=ld_from_mem_imm(1),opcodes[251]=0,opcodes[252]=unused,opcodes[253]=unused,opcodes[254]=cp(1,imm),opcodes[255]=rst(56);var cbcodes=new Array(4096);cbcodes[0]=rl(4,!1,!1),cbcodes[1]=rl(8,!1,!1),cbcodes[2]=rl(16,!1,!1),cbcodes[3]=rl(32,!1,!1),cbcodes[4]=rl(64,!1,!1),cbcodes[5]=rl(128,!1,!1),cbcodes[6]=rl_from_mem(64,128,!1),cbcodes[7]=rl(1,!1,!1),cbcodes[8]=rr(4,!1,!1),cbcodes[9]=rr(8,!1,!1),cbcodes[10]=rr(16,!1,!1),cbcodes[11]=rr(32,!1,!1),cbcodes[12]=rr(64,!1,!1),cbcodes[13]=rr(128,!1,!1),cbcodes[14]=rr_from_mem(64,128,!1),cbcodes[15]=rr(1,!1,!1),cbcodes[16]=rl(4,!0,!1),cbcodes[17]=rl(8,!0,!1),cbcodes[18]=rl(16,!0,!1),cbcodes[19]=rl(32,!0,!1),cbcodes[20]=rl(64,!0,!1),cbcodes[21]=rl(128,!0,!1),cbcodes[22]=rl_from_mem(64,128,!0),cbcodes[23]=rl(1,!0,!1),cbcodes[24]=rr(4,!0,!1),cbcodes[25]=rr(8,!0,!1),cbcodes[26]=rr(16,!0,!1),cbcodes[27]=rr(32,!0,!1),cbcodes[28]=rr(64,!0,!1),cbcodes[29]=rr(128,!0,!1),cbcodes[30]=rr_from_mem(64,128,!0),cbcodes[31]=rr(1,!0,!1),cbcodes[32]=sl(4),cbcodes[33]=sl(8),cbcodes[34]=sl(16),cbcodes[35]=sl(32),cbcodes[36]=sl(64),cbcodes[37]=sl(128),cbcodes[38]=sl_from_mem(64,128),cbcodes[39]=sl(1),cbcodes[40]=sr(4,!1),cbcodes[41]=sr(8,!1),cbcodes[42]=sr(16,!1),cbcodes[43]=sr(32,!1),cbcodes[44]=sr(64,!1),cbcodes[45]=sr(128,!1),cbcodes[46]=sr_from_mem(64,128,!1),cbcodes[47]=sr(1,!1),cbcodes[48]=swap(4),cbcodes[49]=swap(8),cbcodes[50]=swap(16),cbcodes[51]=swap(32),cbcodes[52]=swap(64),cbcodes[53]=swap(128),cbcodes[54]=swap(321),cbcodes[55]=swap(1),cbcodes[56]=sr(4,!0),cbcodes[57]=sr(8,!0),cbcodes[58]=sr(16,!0),cbcodes[59]=sr(32,!0),cbcodes[60]=sr(64,!0),cbcodes[61]=sr(128,!0),cbcodes[62]=sr_from_mem(64,128,!0),cbcodes[63]=sr(1,!0);for(let i=0;i<2;i++)for(let j=0;j<4;j++){let a=1==i?2*j+1:2*j;cbcodes[64+16*j+(0+8*i)]=bit(a,4),cbcodes[64+16*j+(1+8*i)]=bit(a,8),cbcodes[64+16*j+(2+8*i)]=bit(a,16),cbcodes[64+16*j+(3+8*i)]=bit(a,32),cbcodes[64+16*j+(4+8*i)]=bit(a,64),cbcodes[64+16*j+(5+8*i)]=bit(a,128),cbcodes[64+16*j+(6+8*i)]=bit_from_mem(a,64,128),cbcodes[64+16*j+(7+8*i)]=bit(a,1),cbcodes[128+16*j+(0+8*i)]=res(a,4),cbcodes[128+16*j+(1+8*i)]=res(a,8),cbcodes[128+16*j+(2+8*i)]=res(a,16),cbcodes[128+16*j+(3+8*i)]=res(a,32),cbcodes[128+16*j+(4+8*i)]=res(a,64),cbcodes[128+16*j+(5+8*i)]=res(a,128),cbcodes[128+16*j+(6+8*i)]=res_from_mem(a,64,128),cbcodes[128+16*j+(7+8*i)]=res(a,1),cbcodes[192+16*j+(0+8*i)]=set(a,4),cbcodes[192+16*j+(1+8*i)]=set(a,8),cbcodes[192+16*j+(2+8*i)]=set(a,16),cbcodes[192+16*j+(3+8*i)]=set(a,32),cbcodes[192+16*j+(4+8*i)]=set(a,64),cbcodes[192+16*j+(5+8*i)]=set(a,128),cbcodes[192+16*j+(6+8*i)]=set_from_mem(a,64,128),cbcodes[192+16*j+(7+8*i)]=set(a,1)}function cpu(){}console.log(opcodes),console.log(opcodes[227]());var openFile=function(b){var c=b.target,a=new FileReader;a.onloadend=function(c){if(c.target.readyState===FileReader.DONE){ROM=new Uint8Array(a.result);for(var b=0;b<ROM.length;b++);}},a.readAsArrayBuffer(c.files[0])}